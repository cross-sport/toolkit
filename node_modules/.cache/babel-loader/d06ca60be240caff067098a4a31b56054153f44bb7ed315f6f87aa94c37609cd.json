{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCardData = () => {\n  return async dispach => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://meals-http-c4252-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data faild\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispach(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispach(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error . . .\",\n        message: \"fetching cart data failed !\"\n      }));\n    }\n  };\n};\n\n////////////////////send///////////////////////////\n\nexport const sendCartData = cart => {\n  return async dispach => {\n    dispach(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending . . .\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://meals-http-c4252-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalquantity: cart.totalquantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data faild\");\n      }\n      dispach(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success . . .\",\n        message: \"Sent cart successfully\"\n      }));\n\n      // const responseData = await response.json();\n    };\n\n    sendRequest().catch(error => {\n      dispach(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error . . .\",\n        message: \"Sending cart data failed !\"\n      }));\n    });\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCardData","dispach","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalquantity","catch"],"sources":["D:/javascript/video js cotne/codeing/Netdev/React Project/section19_advancedRedux/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCardData = () => {\r\n  return async (dispach) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://meals-http-c4252-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Fetching cart data faild\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispach(cartActions.replaceCart(cartData));\r\n    } catch (error) {\r\n      dispach(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error . . .\",\r\n          message: \"fetching cart data failed !\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n////////////////////send///////////////////////////\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispach) => {\r\n    dispach(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending . . .\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://meals-http-c4252-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalquantity: cart.totalquantity,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data faild\");\r\n      }\r\n\r\n      dispach(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success . . .\",\r\n          message: \"Sent cart successfully\",\r\n        })\r\n      );\r\n\r\n      // const responseData = await response.json();\r\n    };\r\n\r\n    sendRequest().catch((error) => {\r\n      dispach(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error . . .\",\r\n          message: \"Sending cart data failed !\",\r\n        })\r\n      );\r\n    });\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,OAAO,IAAK;IACxB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,OAAO,CAACH,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdV,OAAO,CACLF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;;AAED;;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOhB,OAAO,IAAK;IACxBA,OAAO,CACLF,SAAS,CAACa,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAEN,IAAI,CAACM,KAAK;UACjBC,aAAa,EAAEP,IAAI,CAACO;QACtB,CAAC;MACH,CACF,CAAC;MAED,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEAL,OAAO,CACLF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,eAAe;QACtBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;;MAED;IACF,CAAC;;IAEDG,WAAW,CAAC,CAAC,CAACO,KAAK,CAAEd,KAAK,IAAK;MAC7BV,OAAO,CACLF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}